version: "3.7"

services:
  react:
    build: 
      context: ./
      dockerfile: ./docker/react/Dockerfile
    container_name: tb-front-container
    hostname: tb-front-container
    depends_on:
      - api
      - db
    tty: true
    environment:
      - NODE_ENV=DEVELOPMENT
    volumes:
      - react-data:/usr/src/react/node_modules
      - ./react:/usr/src/react
      - ./scripts:/usr/src/scripts
    ports:
      - 3000:3000
    working_dir: /usr/src/scripts
    command: ["sh","./run_react.sh"]
  api:
    image: "fastapi_starter:1.0.0"
    container_name: "fastapi_starter"
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./docker/api/Dockerfile
    ports:
      - "8888:8000"
    volumes:
      - ./app:/usr/src/app/app:cached
      - ./db:/usr/src/app/db:cached
      - ./scripts:/usr/src/app/scripts:cached
    working_dir: /usr/src/app/scripts
    command: bash -c "./run.sh"
    environment:
      APP_ENV: "development"
      TZ: "Asia/Tokyo"
    env_file:
      - .env.development
  db:
    image: "fastapi_db"
    container_name: "fastapi_db"
    build:
      context: ./docker/test-db
      dockerfile: Dockerfile
    restart: always
    tty: true
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      APP_ENV: "development"
      TZ: "Asia/Tokyo"
    env_file:
      - .env.development
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  react-data:
  postgres_volume: